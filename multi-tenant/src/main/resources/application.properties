spring.application.name=multi-tenant
spring.config.import=optional:configserver:http://localhost:8888
spring.cloud.config.name=multi-tenant
server.port=8096
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.flyway.enabled=false
#spring.flyway.locations=db/migration
#datasource.tenants.location=db/tenant
management.endpoints.web.exposure.include=*


#spring.jpa.open-in-view=false


#jpa.PropertySource = classpath:persistence-multiple-db.properties
#
#spring.jpa.configurations[0].name=product
#spring.jpa.configurations[0].packagesToScan=com.sp.multitenant.model.product
#spring.jpa.configurations[0].basePackages=com.sp.multitenant.repository.dao.product
#spring.jpa.configurations[0].dataSourceBeanName=productDataSource
#spring.jpa.configurations[0].useSchemaAware=true
#spring.jpa.configurations[0].properties=hibernate.dialect:org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.configurations[0].primary=true
#
#
#spring.jpa.configurations[1].name=testproduct
#spring.jpa.configurations[1].packagesToScan=com.sp.multitenant.model.testproduct
#spring.jpa.configurations[1].basePackages=com.sp.multitenant.repository.dao.testproduct
#spring.jpa.configurations[1].dataSourceBeanName=testproductDataSource
#spring.jpa.configurations[1].useSchemaAware=true
#spring.jpa.configurations[1].properties=hibernate.dialect:org.hibernate.dialect.PostgreSQLDialect, hibernate.multiTenancy:SCHEMA
#spring.jpa.configurations[1].primary=false
#
#spring.jpa.configurations[2].name=user
#spring.jpa.configurations[2].packagesToScan=com.sp.multitenant.model.user,com.sp.multitenant.model.userInfo
#spring.jpa.configurations[2].basePackages=com.sp.multitenant.repository.dao.user ,com.sp.multitenant.repository.dao.userInfo
#spring.jpa.configurations[2].dataSourceBeanName=userDataSource
#spring.jpa.configurations[2].useSchemaAware=false
#spring.jpa.configurations[2].properties=hibernate.dialect:org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.configurations[2].primary=false
#
#
#spring.datasource.configurations[0].name=product
#spring.datasource.configurations[0].url=jdbc:postgresql://localhost:5431/microservice-demo
#spring.datasource.configurations[0].username=postgres
#spring.datasource.configurations[0].password=password
#spring.datasource.configurations[0].driverClassName=org.postgresql.Driver
#
#
#spring.datasource.configurations[1].name=testproduct
#spring.datasource.configurations[1].url=jdbc:postgresql://localhost:5431/company_a
#spring.datasource.configurations[1].username=postgres
#spring.datasource.configurations[1].password=password
#spring.datasource.configurations[1].driverClassName=org.postgresql.Driver
#
#spring.datasource.configurations[2].name=user
#spring.datasource.configurations[2].url=jdbc:postgresql://localhost:5431/users
#spring.datasource.configurations[2].username=postgres
#spring.datasource.configurations[2].password=password
#spring.datasource.configurations[2].driverClassName=org.postgresql.Driver





