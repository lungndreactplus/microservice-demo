spring.application.name=product-service
server.port=8082
#server.port=${server.port}
spring.config.import=optional:configserver:http://localhost:8888
spring.cloud.config.name=product-service
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=product-service
#spring.data.mongodb.uri=mongodb://localhost:27017/product-service

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=${spring.datasource.url}
#spring.datasource.username=${spring.datasource.username}
#spring.datasource.password=${spring.datasource.password}
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
#spring.main.allow-bean-definition-overriding=true

#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus
management.endpoint.health.show-details=always
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8181/realms/spring-boot-microservices-realm
jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
jwt.jwk.set.uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs


spring.jpa.open-in-view=false
spring.web.resources.static-locations=classpath:/static/
#datasource.tenants.names=${datasource.tenants.names}
#datasource.tenants.location=${datasource.tenants.location}






